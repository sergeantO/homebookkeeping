// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id              Int         @id @default(autoincrement())
    email           String      @unique
    name            String?
    password        String
    role            Role        @default(USER)
    isEmailVerified Boolean     @default(false)
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
    Token           Token[]
    operations      Operation[] @relation("UserOperations")
    accounts        UserAccounts[]
}

model Token {
    id          Int       @id @default(autoincrement())
    token       String
    type        TokenType
    expires     DateTime
    blacklisted Boolean
    createdAt   DateTime  @default(now())
    User        User      @relation(fields: [userId], references: [id])
    userId      Int
}

model Account {
    id               Int              @id @default(autoincrement())
    type             AccountType
    name             String           @unique
    isClosable       Boolean          @default(false)
    isUserProfit     Boolean          @default(false)
    createdAt        DateTime         @default(now())
    users            UserAccounts[]
    Balances         BalanceHistory[] @relation("AccountBalanceHistory")
    creditOperations Operation[]      @relation("CreditAccountOperations")
    debitOperations  Operation[]      @relation("DebitAccountOperations")
}

model UserAccounts {
    id               Int              @id @default(autoincrement())
    user             User             @relation(fields: [userId], references: [id])
    account          Account          @relation(fields: [accountId], references: [id])
    userId           Int
    accountId        Int
    userIsOwner      Boolean          @default(false)

    @@unique([accountId, userId])
}

model Operation {
    id               Int      @id @default(autoincrement())
    name             String
    value            Int
    User             User     @relation("UserOperations", fields: [userId], references: [id])
    CreditAccount    Account  @relation("CreditAccountOperations", fields: [creditAccountId], references: [id])
    DebitAccount     Account  @relation("DebitAccountOperations", fields: [debitAccountId], references: [id])
    createdAt        DateTime @default(now())
    creditAccountId  Int
    debitAccountId   Int
    userId           Int
}

model BalanceHistory {
    id          Int      @id @default(autoincrement())
    prevValue   Int      @default(0)
    monthDelta  Int      @default(0)
    value       Int      @default(0)
    account     Account  @relation("AccountBalanceHistory", fields: [acountId], references: [id])
    acountId    Int
    month       Int
    year        Int
    createdAt   DateTime @default(now())

    @@unique([acountId, month, year])
}

enum Role {
    USER
    ADMIN
}

enum TokenType {
    ACCESS
    REFRESH
    RESET_PASSWORD
    VERIFY_EMAIL
}

enum AccountType {
    CURRENT_ASSET
    FIXED_ASSET
    DEBT
    OWN_CAPITAL
}
