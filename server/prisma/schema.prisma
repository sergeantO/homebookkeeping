// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  name            String?
  password        String
  role            Role        @default(USER)
  isEmailVerified Boolean     @default(false)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  Token           Token[]
  accounts        Account[]
  operations      Operation[] @relation("UserOperations")
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  User        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Account {
  id               Int          @id @default(autoincrement())
  type             AccountType
  name             String       @unique
  createdAt        DateTime     @default(now())
  users            User[]
  Balances         Balance[]    @relation("AccountBalance")
  creditOperations Operation[]  @relation("CreditAccountOperations")
  debitOperations  Operation[]  @relation("DebitAccountOperations")
}

model Operation {
  id               Int       @id @default(autoincrement())
  name             String
  value            Int
  User             User      @relation("UserOperations", fields: [userId], references: [id])
  CreditAccount    Account   @relation("CreditAccountOperations", fields: [creditAccountId], references: [id])
  DebitAccount     Account   @relation("DebitAccountOperations", fields: [debitAccountId], references: [id])
  createdAt        DateTime  @default(now())
  creditAccountId  Int
  debitAccountId   Int
  userId           Int
}

model Balance {
  id           Int       @id @default(autoincrement())
  startValue   Int
  credit       Int
  debet        Int
  result       Int
  endValue     Int
  account      Account   @relation("AccountBalance", fields: [acountId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deadDateTime DateTime
  acountId     Int
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

enum AccountType {
    CURRENT_ASSET
    FIXED_ASSET
    DEBT
    OWN_CAPITAL
}
